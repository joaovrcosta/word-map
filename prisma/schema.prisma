generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  password    String
  vaults      Vault[]
  wordHistory WordHistory[]
  texts       Text[]
}

model Vault {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  words     Word[]
}

model Word {
  id               Int           @id @default(autoincrement())
  status           Boolean       @default(true)
  name             String
  grammaticalClass String
  category         String?
  translations     String[]
  lastPractice     DateTime?
  confidence       Int           @default(1)
  isSaved          Boolean       @default(false)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  vaultId          Int
  vault            Vault         @relation(fields: [vaultId], references: [id])
  wordHistory      WordHistory[]
  Word_A           Word[]        @relation("RelatedWords")
  Word_B           Word[]        @relation("RelatedWords")
}

model WordHistory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  userId    Int
  wordId    Int
  user      User     @relation(fields: [userId], references: [id])
  word      Word     @relation(fields: [wordId], references: [id])
}

model Text {
  id        Int      @id @default(autoincrement())
  title     String
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}
